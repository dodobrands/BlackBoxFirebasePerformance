name: Unit Tests

on:
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: 'macos-15'

    timeout-minutes: 15

    env:
      SCHEME: "BlackBoxFirebasePerformance"

    strategy:
      matrix:
        DESTINATION: ["platform=iOS Simulator,name=iPhone 16", "platform=tvOS Simulator,name=Apple TV"]

    steps:
    - name: Get source code
      uses: actions/checkout@v4

    - name: Prepare Environment for App Build
      uses: ./.github/actions/prepare_env_app_build

    - name: Resolve Dependencies
      run: xcodebuild -resolvePackageDependencies
      
    - name: Build
      run: >
        xcodebuild build-for-testing
        -scheme ${{ env.SCHEME }}
        -destination '${{ matrix.DESTINATION }}'
        -quiet

    - name: Test
      run: >
        xcodebuild test-without-building
        -scheme ${{ env.SCHEME }}
        -destination '${{ matrix.DESTINATION }}'
        -quiet

  # This allows us to have a branch protection rule for tests and deploys with matrix
  status-for-matrix:
    runs-on: 'ubuntu-latest'
    needs: tests
    if: always()
    steps:
      - name: Calculate matrix result
        run: |
          result="${{ needs.tests.result }}"
          if [[ $result == "success" ]]; then
            exit 0
          else
            exit 1
          fi
